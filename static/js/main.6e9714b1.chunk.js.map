{"version":3,"sources":["logo.svg","components/Nav.js","components/Clothes.js","components/Mobile.js","components/Led.js","container/Shop.js","App.js","serviceWorker.js","index.js","utils/db.js"],"names":["module","exports","__webpack_require__","p","Nav","props","react_default","a","createElement","NavLink","activeClassName","to","Clothes","Mobile","Leds","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","message","inherits","createClass","key","value","_this2","userObject","refs","userid","pwd","firebase","ref","on","snapshot","obj","val","setState","console","log","_this3","set","then","data","catch","err","_this4","type","placeholder","onClick","login","bind","register","history","replace","React","Component","Shop","_Component","Nav_Nav","Switch","Route","path","component","exact","match","params","discount","App","Shop_Shop","Boolean","window","location","hostname","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e9714b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nexport const Nav = (props) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li><NavLink activeClassName=\"active\" to=\"/home\" >Mobile</NavLink></li>\r\n                <li><NavLink to=\"/clothes\" >Clothes</NavLink></li>\r\n                <li><NavLink to=\"/watches/1000\" >Watches</NavLink></li>\r\n                <li><NavLink to=\"/led\" >Led</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\nexport const Clothes = () => {\r\n    return (\r\n        <div>\r\n            <h1>Clothes Component</h1>\r\n            <ul>\r\n                <li><NavLink to=\"clothes/formal\">Formal Clothes</NavLink></li>\r\n                <li><NavLink to=\"clothes/casual\">Casual Clothes</NavLink></li>\r\n                <br />\r\n                <hr />\r\n\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nexport const Mobile = () => {\r\n    return (\r\n        <div>\r\n            <h1>Mobile Component</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport * as firebase from 'firebase';\r\nexport class Leds extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { message: '' };\r\n    }\r\n    login() {\r\n        var userObject = {\r\n            \"userid\": this.refs.userid.value,\r\n            \"pwd\": this.refs.pwd.value\r\n        }\r\n\r\n        var user = firebase.database().ref(\"/users/\" + userObject.userid);\r\n        user.on('value', (snapshot) => {\r\n            var obj = snapshot.val();\r\n            if (obj && obj.pwd == userObject.pwd) {\r\n                this.setState({ message: 'Welcome' + obj.userid });\r\n            }\r\n            else {\r\n                this.setState({ message: 'Invalid Userid or Password' });\r\n            }\r\n            console.log(\"Object is \", obj);\r\n        });\r\n\r\n    }\r\n    register() {\r\n        var userObject = {\r\n            \"userid\": this.refs.userid.value,\r\n            \"pwd\": this.refs.pwd.value\r\n        }\r\n        var promise = firebase.database().ref(\"/users/\" + userObject.userid).set(userObject);\r\n        promise.then(data => {\r\n            console.log(\"Data is \", data);\r\n            this.setState({ message: 'Register SuccessFully' });\r\n        }).catch(err => {\r\n            console.log(\"Error \", err);\r\n            this.setState({ message: \"Can't Register\" });\r\n\r\n        });\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Led Component</h1>\r\n                <p>Message {this.state.message}</p>\r\n                <input ref=\"userid\" type=\"text\" placeholder=\"Type Userid Here\" />\r\n                <br />\r\n                <input ref=\"pwd\" type=\"password\" placeholder=\"Type Password Here\" />\r\n                <button onClick={this.login.bind(this)}>Login</button>\r\n                <button onClick={this.register.bind(this)}>Register</button>\r\n                <button onClick={() => {\r\n                    this.props.history.replace('/clothes');\r\n                }}>Back to Clothes</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Nav} from '../components/Nav';\r\nimport {Clothes} from '../components/Clothes';\r\nimport {Mobile} from '../components/Mobile';\r\nimport {Leds} from '../components/Led';\r\nimport {Switch,Route} from 'react-router-dom';\r\nexport class Shop extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Nav/>\r\n                <fieldset>\r\n        <legend>Output</legend>\r\n        <Switch>\r\n            <Route  path=\"/home\" component = {Mobile}/>\r\n            <Route exact  path=\"/clothes\" component = {Clothes}></Route>\r\n            \r\n            <Route  path=\"/led\" component = {Leds}/>\r\n            <Route  path=\"/watches/:discount\" component = {(props)=>{\r\n                return(\r\n                    <div>\r\n                    <h1>WATCH COMPONENT {props.match.params.discount}</h1>\r\n                   \r\n                    </div>\r\n                )\r\n            }}/>\r\n            <Switch>\r\n           <Route  path =\"/clothes/formal\" component={()=>{\r\n                    return (\r\n                        <h1>Formal</h1>\r\n                    )\r\n                }}></Route>\r\n                <Route  path =\"/clothes/casual\" component={()=>{\r\n                    return (\r\n                        <h1>Casual</h1>\r\n                    )\r\n                }}></Route>\r\n                <Route component={()=>{\r\n                return(\r\n                    <h1>404 U Type Some Wrong URL</h1>\r\n                )\r\n                }}></Route>\r\n           </Switch>\r\n            \r\n            \r\n            <Route component={()=>{\r\n                return(\r\n                    <h1>404 U Type Some Wrong URL</h1>\r\n                )\r\n                }}></Route>\r\n        </Switch>\r\n      </fieldset>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Shop } from './container/Shop';\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Shop />\n\n\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { config } from './utils/db';\nimport * as firebase from 'firebase';\nfirebase.initializeApp(config);\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","export const config = {\r\n  apiKey: \"AIzaSyCziGa4eCm6zhCTbLv1Qq_5iPdK6t-bbXw\",\r\n  authDomain: \"reactappdemo-a0702.firebaseapp.com\",\r\n  databaseURL: \"https://reactappdemo-a0702.firebaseio.com\",\r\n  projectId: \"reactappdemo-a0702\",\r\n  storageBucket: \"reactappdemo-a0702.appspot.com\",\r\n  messagingSenderId: \"355565181830\"\r\n};"],"sourceRoot":""}